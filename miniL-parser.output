Terminals unused in grammar

   FOR
   UMINUS


State 60 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: functions
    2        | error

    3 functions: function functions_spec
    4          | %empty

    5 functions_spec: functions

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    7 declarations: declaration SEMICOLON declarations_spec
    8             | %empty

    9 declarations_spec: declarations

   10 statements: statement SEMICOLON statementsEnding

   11 statementsEnding: statements
   12                 | %empty

   13 declaration: identifiers COLON INTEGER
   14            | identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | identifiers COLON ENUM L_PAREN identifiers R_PAREN

   16 identifiers: IDENT COMMA identifiers
   17            | IDENT

   18 statement: svar
   19          | sif
   20          | swhile
   21          | sdo
   22          | sread
   23          | swrite
   24          | scontinue
   25          | sreturn

   26 svar: var ASSIGN expression

   27 sif: IF bool_expr THEN statements ENDIF
   28    | IF bool_expr THEN statements ELSE statements ENDIF

   29 swhile: WHILE bool_expr BEGINLOOP statements ENDLOOP

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE bool_expr

   31 sread: READ vars

   32 vars: var
   33     | var COMMA vars

   34 swrite: WRITE vars

   35 scontinue: CONTINUE

   36 sreturn: RETURN expression

   37 bool_expr: relation_and_expr bool_exprs

   38 bool_exprs: OR relation_and_expr bool_exprs
   39           | %empty

   40 relation_and_expr: relation_expr relation_and_exprs

   41 relation_and_exprs: AND relation_expr relation_and_exprs
   42                   | %empty

   43 relation_expr: nots relation_expr_ending

   44 relation_expr_ending: expression comp expression
   45                     | TRUE
   46                     | FALSE
   47                     | L_PAREN bool_expr R_PAREN

   48 nots: NOT
   49     | %empty

   50 comp: EQ
   51     | NEQ
   52     | LT
   53     | GT
   54     | LTE
   55     | GTE

   56 expression: multiplicative_expr expression_operators

   57 expression_operators: ADD multiplicative_expr expression_operators
   58                     | SUB multiplicative_expr expression_operators
   59                     | %empty

   60 multiplicative_expr: term multiplicative_operators

   61 multiplicative_operators: MOD term multiplicative_operators
   62                         | DIV term multiplicative_operators
   63                         | MULT term multiplicative_operators
   64                         | %empty

   65 term: term_spec
   66     | subs NUMBER
   67     | subs L_PAREN expression R_PAREN

   68 term_spec: subs IDENT var_or_bottom

   69 subs: SUB
   70     | %empty

   71 expressions: expression COMMA expressions
   72            | expression
   73            | %empty

   74 var: IDENT var_spec

   75 var_or_bottom: var_spec
   76              | L_PAREN expressions R_PAREN

   77 var_spec: L_SQUARE_BRACKET expression R_SQUARE_BRACKET
   78         | %empty


Terminals, with rules where they appear

$end (0) 0
error (256) 2
FUNCTION (258) 6
BEGIN_PARAMS (259) 6
END_PARAMS (260) 6
BEGIN_LOCALS (261) 6
END_LOCALS (262) 6
BEGIN_BODY (263) 6
END_BODY (264) 6
INTEGER (265) 13 14
ARRAY (266) 14
ENUM (267) 15
OF (268) 14
IF (269) 27 28
THEN (270) 27 28
ENDIF (271) 27 28
ELSE (272) 28
FOR (273)
WHILE (274) 29 30
DO (275) 30
BEGINLOOP (276) 29 30
ENDLOOP (277) 29 30
CONTINUE (278) 35
READ (279) 31
WRITE (280) 34
TRUE (281) 45
FALSE (282) 46
RETURN (283) 36
SEMICOLON (284) 6 7 10
COLON (285) 13 14 15
COMMA (286) 16 33 71
L_PAREN (287) 15 47 67 76
R_PAREN (288) 15 47 67 76
L_SQUARE_BRACKET (289) 14 77
R_SQUARE_BRACKET (290) 14 77
UMINUS (291)
MULT (292) 63
DIV (293) 62
MOD (294) 61
ADD (295) 57
SUB (296) 58 69
NEQ (297) 51
EQ (298) 50
GTE (299) 55
GT (300) 53
LTE (301) 54
LT (302) 52
NOT (303) 48
AND (304) 41
OR (305) 38
ASSIGN (306) 26
IDENT (307) 6 16 17 68 74
NUMBER (308) 14 66


Nonterminals, with rules where they appear

$accept (54)
    on left: 0
program (55)
    on left: 1 2, on right: 0
functions (56)
    on left: 3 4, on right: 1 5
functions_spec (57)
    on left: 5, on right: 3
function (58)
    on left: 6, on right: 3
declarations (59)
    on left: 7 8, on right: 6 9
declarations_spec (60)
    on left: 9, on right: 7
statements (61)
    on left: 10, on right: 6 11 27 28 29 30
statementsEnding (62)
    on left: 11 12, on right: 10
declaration (63)
    on left: 13 14 15, on right: 7
identifiers (64)
    on left: 16 17, on right: 13 14 15 16
statement (65)
    on left: 18 19 20 21 22 23 24 25, on right: 10
svar (66)
    on left: 26, on right: 18
sif (67)
    on left: 27 28, on right: 19
swhile (68)
    on left: 29, on right: 20
sdo (69)
    on left: 30, on right: 21
sread (70)
    on left: 31, on right: 22
vars (71)
    on left: 32 33, on right: 31 33 34
swrite (72)
    on left: 34, on right: 23
scontinue (73)
    on left: 35, on right: 24
sreturn (74)
    on left: 36, on right: 25
bool_expr (75)
    on left: 37, on right: 27 28 29 30 47
bool_exprs (76)
    on left: 38 39, on right: 37 38
relation_and_expr (77)
    on left: 40, on right: 37 38
relation_and_exprs (78)
    on left: 41 42, on right: 40 41
relation_expr (79)
    on left: 43, on right: 40 41
relation_expr_ending (80)
    on left: 44 45 46 47, on right: 43
nots (81)
    on left: 48 49, on right: 43
comp (82)
    on left: 50 51 52 53 54 55, on right: 44
expression (83)
    on left: 56, on right: 26 36 44 67 71 72 77
expression_operators (84)
    on left: 57 58 59, on right: 56 57 58
multiplicative_expr (85)
    on left: 60, on right: 56 57 58
multiplicative_operators (86)
    on left: 61 62 63 64, on right: 60 61 62 63
term (87)
    on left: 65 66 67, on right: 60 61 62 63
term_spec (88)
    on left: 68, on right: 65
subs (89)
    on left: 69 70, on right: 66 67 68
expressions (90)
    on left: 71 72 73, on right: 71 76
var (91)
    on left: 74, on right: 26 32 33
var_or_bottom (92)
    on left: 75 76, on right: 68
var_spec (93)
    on left: 77 78, on right: 74 75


State 0

    0 $accept: . program $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    $end  reduce using rule 4 (functions)

    program    go to state 3
    functions  go to state 4
    function   go to state 5


State 1

    2 program: error .

    $default  reduce using rule 2 (program)


State 2

    6 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 6


State 3

    0 $accept: program . $end

    $end  shift, and go to state 7


State 4

    1 program: functions .

    $default  reduce using rule 1 (program)


State 5

    3 functions: function . functions_spec

    FUNCTION  shift, and go to state 2

    $default  reduce using rule 4 (functions)

    functions       go to state 8
    functions_spec  go to state 9
    function        go to state 5


State 6

    6 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: program $end .

    $default  accept


State 8

    5 functions_spec: functions .

    $default  reduce using rule 5 (functions_spec)


State 9

    3 functions: function functions_spec .

    $default  reduce using rule 3 (functions)


State 10

    6 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 11


State 11

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifiers   go to state 15


State 12

   16 identifiers: IDENT . COMMA identifiers
   17            | IDENT .

    COMMA  shift, and go to state 16

    $default  reduce using rule 17 (identifiers)


State 13

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

    7 declarations: declaration . SEMICOLON declarations_spec

    SEMICOLON  shift, and go to state 18


State 15

   13 declaration: identifiers . COLON INTEGER
   14            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN

    COLON  shift, and go to state 19


State 16

   16 identifiers: IDENT COMMA . identifiers

    IDENT  shift, and go to state 12

    identifiers  go to state 20


State 17

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 21


State 18

    7 declarations: declaration SEMICOLON . declarations_spec

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations       go to state 22
    declarations_spec  go to state 23
    declaration        go to state 14
    identifiers        go to state 15


State 19

   13 declaration: identifiers COLON . INTEGER
   14            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   15            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN

    INTEGER  shift, and go to state 24
    ARRAY    shift, and go to state 25
    ENUM     shift, and go to state 26


State 20

   16 identifiers: IDENT COMMA identifiers .

    $default  reduce using rule 16 (identifiers)


State 21

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 12

    $default  reduce using rule 8 (declarations)

    declarations  go to state 27
    declaration   go to state 14
    identifiers   go to state 15


State 22

    9 declarations_spec: declarations .

    $default  reduce using rule 9 (declarations_spec)


State 23

    7 declarations: declaration SEMICOLON declarations_spec .

    $default  reduce using rule 7 (declarations)


State 24

   13 declaration: identifiers COLON INTEGER .

    $default  reduce using rule 13 (declaration)


State 25

   14 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 28


State 26

   15 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN

    L_PAREN  shift, and go to state 29


State 27

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 30


State 28

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 31


State 29

   15 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN

    IDENT  shift, and go to state 12

    identifiers  go to state 32


State 30

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 33


State 31

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 34


State 32

   15 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN

    R_PAREN  shift, and go to state 35


State 33

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    statements  go to state 44
    statement   go to state 45
    svar        go to state 46
    sif         go to state 47
    swhile      go to state 48
    sdo         go to state 49
    sread       go to state 50
    swrite      go to state 51
    scontinue   go to state 52
    sreturn     go to state 53
    var         go to state 54


State 34

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 55


State 35

   15 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .

    $default  reduce using rule 15 (declaration)


State 36

   27 sif: IF . bool_expr THEN statements ENDIF
   28    | IF . bool_expr THEN statements ELSE statements ENDIF

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    bool_expr          go to state 57
    relation_and_expr  go to state 58
    relation_expr      go to state 59
    nots               go to state 60


State 37

   29 swhile: WHILE . bool_expr BEGINLOOP statements ENDLOOP

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    bool_expr          go to state 61
    relation_and_expr  go to state 58
    relation_expr      go to state 59
    nots               go to state 60


State 38

   30 sdo: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr

    BEGINLOOP  shift, and go to state 62


State 39

   35 scontinue: CONTINUE .

    $default  reduce using rule 35 (scontinue)


State 40

   31 sread: READ . vars

    IDENT  shift, and go to state 43

    vars  go to state 63
    var   go to state 64


State 41

   34 swrite: WRITE . vars

    IDENT  shift, and go to state 43

    vars  go to state 65
    var   go to state 64


State 42

   36 sreturn: RETURN . expression

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    expression           go to state 67
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 43

   74 var: IDENT . var_spec

    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 78 (var_spec)

    var_spec  go to state 73


State 44

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 74


State 45

   10 statements: statement . SEMICOLON statementsEnding

    SEMICOLON  shift, and go to state 75


State 46

   18 statement: svar .

    $default  reduce using rule 18 (statement)


State 47

   19 statement: sif .

    $default  reduce using rule 19 (statement)


State 48

   20 statement: swhile .

    $default  reduce using rule 20 (statement)


State 49

   21 statement: sdo .

    $default  reduce using rule 21 (statement)


State 50

   22 statement: sread .

    $default  reduce using rule 22 (statement)


State 51

   23 statement: swrite .

    $default  reduce using rule 23 (statement)


State 52

   24 statement: scontinue .

    $default  reduce using rule 24 (statement)


State 53

   25 statement: sreturn .

    $default  reduce using rule 25 (statement)


State 54

   26 svar: var . ASSIGN expression

    ASSIGN  shift, and go to state 76


State 55

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 77


State 56

   48 nots: NOT .

    $default  reduce using rule 48 (nots)


State 57

   27 sif: IF bool_expr . THEN statements ENDIF
   28    | IF bool_expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 78


State 58

   37 bool_expr: relation_and_expr . bool_exprs

    OR  shift, and go to state 79

    $default  reduce using rule 39 (bool_exprs)

    bool_exprs  go to state 80


State 59

   40 relation_and_expr: relation_expr . relation_and_exprs

    AND  shift, and go to state 81

    $default  reduce using rule 42 (relation_and_exprs)

    relation_and_exprs  go to state 82


State 60

   43 relation_expr: nots . relation_expr_ending

    TRUE     shift, and go to state 83
    FALSE    shift, and go to state 84
    L_PAREN  shift, and go to state 85
    SUB      shift, and go to state 66

    L_PAREN   [reduce using rule 70 (subs)]
    $default  reduce using rule 70 (subs)

    relation_expr_ending  go to state 86
    expression            go to state 87
    multiplicative_expr   go to state 68
    term                  go to state 69
    term_spec             go to state 70
    subs                  go to state 71


State 61

   29 swhile: WHILE bool_expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 88


State 62

   30 sdo: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    statements  go to state 89
    statement   go to state 45
    svar        go to state 46
    sif         go to state 47
    swhile      go to state 48
    sdo         go to state 49
    sread       go to state 50
    swrite      go to state 51
    scontinue   go to state 52
    sreturn     go to state 53
    var         go to state 54


State 63

   31 sread: READ vars .

    $default  reduce using rule 31 (sread)


State 64

   32 vars: var .
   33     | var . COMMA vars

    COMMA  shift, and go to state 90

    $default  reduce using rule 32 (vars)


State 65

   34 swrite: WRITE vars .

    $default  reduce using rule 34 (swrite)


State 66

   69 subs: SUB .

    $default  reduce using rule 69 (subs)


State 67

   36 sreturn: RETURN expression .

    $default  reduce using rule 36 (sreturn)


State 68

   56 expression: multiplicative_expr . expression_operators

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 59 (expression_operators)

    expression_operators  go to state 93


State 69

   60 multiplicative_expr: term . multiplicative_operators

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 64 (multiplicative_operators)

    multiplicative_operators  go to state 97


State 70

   65 term: term_spec .

    $default  reduce using rule 65 (term)


State 71

   66 term: subs . NUMBER
   67     | subs . L_PAREN expression R_PAREN
   68 term_spec: subs . IDENT var_or_bottom

    L_PAREN  shift, and go to state 98
    IDENT    shift, and go to state 99
    NUMBER   shift, and go to state 100


State 72

   77 var_spec: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    expression           go to state 101
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 73

   74 var: IDENT var_spec .

    $default  reduce using rule 74 (var)


State 74

    6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 6 (function)


State 75

   10 statements: statement SEMICOLON . statementsEnding

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    $default  reduce using rule 12 (statementsEnding)

    statements        go to state 102
    statementsEnding  go to state 103
    statement         go to state 45
    svar              go to state 46
    sif               go to state 47
    swhile            go to state 48
    sdo               go to state 49
    sread             go to state 50
    swrite            go to state 51
    scontinue         go to state 52
    sreturn           go to state 53
    var               go to state 54


State 76

   26 svar: var ASSIGN . expression

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    expression           go to state 104
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 77

   14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 14 (declaration)


State 78

   27 sif: IF bool_expr THEN . statements ENDIF
   28    | IF bool_expr THEN . statements ELSE statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    statements  go to state 105
    statement   go to state 45
    svar        go to state 46
    sif         go to state 47
    swhile      go to state 48
    sdo         go to state 49
    sread       go to state 50
    swrite      go to state 51
    scontinue   go to state 52
    sreturn     go to state 53
    var         go to state 54


State 79

   38 bool_exprs: OR . relation_and_expr bool_exprs

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    relation_and_expr  go to state 106
    relation_expr      go to state 59
    nots               go to state 60


State 80

   37 bool_expr: relation_and_expr bool_exprs .

    $default  reduce using rule 37 (bool_expr)


State 81

   41 relation_and_exprs: AND . relation_expr relation_and_exprs

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    relation_expr  go to state 107
    nots           go to state 60


State 82

   40 relation_and_expr: relation_expr relation_and_exprs .

    $default  reduce using rule 40 (relation_and_expr)


State 83

   45 relation_expr_ending: TRUE .

    $default  reduce using rule 45 (relation_expr_ending)


State 84

   46 relation_expr_ending: FALSE .

    $default  reduce using rule 46 (relation_expr_ending)


State 85

   47 relation_expr_ending: L_PAREN . bool_expr R_PAREN

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    bool_expr          go to state 108
    relation_and_expr  go to state 58
    relation_expr      go to state 59
    nots               go to state 60


State 86

   43 relation_expr: nots relation_expr_ending .

    $default  reduce using rule 43 (relation_expr)


State 87

   44 relation_expr_ending: expression . comp expression

    NEQ  shift, and go to state 109
    EQ   shift, and go to state 110
    GTE  shift, and go to state 111
    GT   shift, and go to state 112
    LTE  shift, and go to state 113
    LT   shift, and go to state 114

    comp  go to state 115


State 88

   29 swhile: WHILE bool_expr BEGINLOOP . statements ENDLOOP

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    statements  go to state 116
    statement   go to state 45
    svar        go to state 46
    sif         go to state 47
    swhile      go to state 48
    sdo         go to state 49
    sread       go to state 50
    swrite      go to state 51
    scontinue   go to state 52
    sreturn     go to state 53
    var         go to state 54


State 89

   30 sdo: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr

    ENDLOOP  shift, and go to state 117


State 90

   33 vars: var COMMA . vars

    IDENT  shift, and go to state 43

    vars  go to state 118
    var   go to state 64


State 91

   57 expression_operators: ADD . multiplicative_expr expression_operators

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    multiplicative_expr  go to state 119
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 92

   58 expression_operators: SUB . multiplicative_expr expression_operators

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    multiplicative_expr  go to state 120
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 93

   56 expression: multiplicative_expr expression_operators .

    $default  reduce using rule 56 (expression)


State 94

   63 multiplicative_operators: MULT . term multiplicative_operators

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    term       go to state 121
    term_spec  go to state 70
    subs       go to state 71


State 95

   62 multiplicative_operators: DIV . term multiplicative_operators

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    term       go to state 122
    term_spec  go to state 70
    subs       go to state 71


State 96

   61 multiplicative_operators: MOD . term multiplicative_operators

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    term       go to state 123
    term_spec  go to state 70
    subs       go to state 71


State 97

   60 multiplicative_expr: term multiplicative_operators .

    $default  reduce using rule 60 (multiplicative_expr)


State 98

   67 term: subs L_PAREN . expression R_PAREN

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    expression           go to state 124
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 99

   68 term_spec: subs IDENT . var_or_bottom

    L_PAREN           shift, and go to state 125
    L_SQUARE_BRACKET  shift, and go to state 72

    $default  reduce using rule 78 (var_spec)

    var_or_bottom  go to state 126
    var_spec       go to state 127


State 100

   66 term: subs NUMBER .

    $default  reduce using rule 66 (term)


State 101

   77 var_spec: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 128


State 102

   11 statementsEnding: statements .

    $default  reduce using rule 11 (statementsEnding)


State 103

   10 statements: statement SEMICOLON statementsEnding .

    $default  reduce using rule 10 (statements)


State 104

   26 svar: var ASSIGN expression .

    $default  reduce using rule 26 (svar)


State 105

   27 sif: IF bool_expr THEN statements . ENDIF
   28    | IF bool_expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 129
    ELSE   shift, and go to state 130


State 106

   38 bool_exprs: OR relation_and_expr . bool_exprs

    OR  shift, and go to state 79

    $default  reduce using rule 39 (bool_exprs)

    bool_exprs  go to state 131


State 107

   41 relation_and_exprs: AND relation_expr . relation_and_exprs

    AND  shift, and go to state 81

    $default  reduce using rule 42 (relation_and_exprs)

    relation_and_exprs  go to state 132


State 108

   47 relation_expr_ending: L_PAREN bool_expr . R_PAREN

    R_PAREN  shift, and go to state 133


State 109

   51 comp: NEQ .

    $default  reduce using rule 51 (comp)


State 110

   50 comp: EQ .

    $default  reduce using rule 50 (comp)


State 111

   55 comp: GTE .

    $default  reduce using rule 55 (comp)


State 112

   53 comp: GT .

    $default  reduce using rule 53 (comp)


State 113

   54 comp: LTE .

    $default  reduce using rule 54 (comp)


State 114

   52 comp: LT .

    $default  reduce using rule 52 (comp)


State 115

   44 relation_expr_ending: expression comp . expression

    SUB  shift, and go to state 66

    $default  reduce using rule 70 (subs)

    expression           go to state 134
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71


State 116

   29 swhile: WHILE bool_expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 135


State 117

   30 sdo: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr

    WHILE  shift, and go to state 136


State 118

   33 vars: var COMMA vars .

    $default  reduce using rule 33 (vars)


State 119

   57 expression_operators: ADD multiplicative_expr . expression_operators

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 59 (expression_operators)

    expression_operators  go to state 137


State 120

   58 expression_operators: SUB multiplicative_expr . expression_operators

    ADD  shift, and go to state 91
    SUB  shift, and go to state 92

    $default  reduce using rule 59 (expression_operators)

    expression_operators  go to state 138


State 121

   63 multiplicative_operators: MULT term . multiplicative_operators

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 64 (multiplicative_operators)

    multiplicative_operators  go to state 139


State 122

   62 multiplicative_operators: DIV term . multiplicative_operators

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 64 (multiplicative_operators)

    multiplicative_operators  go to state 140


State 123

   61 multiplicative_operators: MOD term . multiplicative_operators

    MULT  shift, and go to state 94
    DIV   shift, and go to state 95
    MOD   shift, and go to state 96

    $default  reduce using rule 64 (multiplicative_operators)

    multiplicative_operators  go to state 141


State 124

   67 term: subs L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 142


State 125

   76 var_or_bottom: L_PAREN . expressions R_PAREN

    SUB  shift, and go to state 66

    R_PAREN   reduce using rule 73 (expressions)
    $default  reduce using rule 70 (subs)

    expression           go to state 143
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71
    expressions          go to state 144


State 126

   68 term_spec: subs IDENT var_or_bottom .

    $default  reduce using rule 68 (term_spec)


State 127

   75 var_or_bottom: var_spec .

    $default  reduce using rule 75 (var_or_bottom)


State 128

   77 var_spec: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .

    $default  reduce using rule 77 (var_spec)


State 129

   27 sif: IF bool_expr THEN statements ENDIF .

    $default  reduce using rule 27 (sif)


State 130

   28 sif: IF bool_expr THEN statements ELSE . statements ENDIF

    IF        shift, and go to state 36
    WHILE     shift, and go to state 37
    DO        shift, and go to state 38
    CONTINUE  shift, and go to state 39
    READ      shift, and go to state 40
    WRITE     shift, and go to state 41
    RETURN    shift, and go to state 42
    IDENT     shift, and go to state 43

    statements  go to state 145
    statement   go to state 45
    svar        go to state 46
    sif         go to state 47
    swhile      go to state 48
    sdo         go to state 49
    sread       go to state 50
    swrite      go to state 51
    scontinue   go to state 52
    sreturn     go to state 53
    var         go to state 54


State 131

   38 bool_exprs: OR relation_and_expr bool_exprs .

    $default  reduce using rule 38 (bool_exprs)


State 132

   41 relation_and_exprs: AND relation_expr relation_and_exprs .

    $default  reduce using rule 41 (relation_and_exprs)


State 133

   47 relation_expr_ending: L_PAREN bool_expr R_PAREN .

    $default  reduce using rule 47 (relation_expr_ending)


State 134

   44 relation_expr_ending: expression comp expression .

    $default  reduce using rule 44 (relation_expr_ending)


State 135

   29 swhile: WHILE bool_expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 29 (swhile)


State 136

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr

    NOT  shift, and go to state 56

    $default  reduce using rule 49 (nots)

    bool_expr          go to state 146
    relation_and_expr  go to state 58
    relation_expr      go to state 59
    nots               go to state 60


State 137

   57 expression_operators: ADD multiplicative_expr expression_operators .

    $default  reduce using rule 57 (expression_operators)


State 138

   58 expression_operators: SUB multiplicative_expr expression_operators .

    $default  reduce using rule 58 (expression_operators)


State 139

   63 multiplicative_operators: MULT term multiplicative_operators .

    $default  reduce using rule 63 (multiplicative_operators)


State 140

   62 multiplicative_operators: DIV term multiplicative_operators .

    $default  reduce using rule 62 (multiplicative_operators)


State 141

   61 multiplicative_operators: MOD term multiplicative_operators .

    $default  reduce using rule 61 (multiplicative_operators)


State 142

   67 term: subs L_PAREN expression R_PAREN .

    $default  reduce using rule 67 (term)


State 143

   71 expressions: expression . COMMA expressions
   72            | expression .

    COMMA  shift, and go to state 147

    $default  reduce using rule 72 (expressions)


State 144

   76 var_or_bottom: L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 148


State 145

   28 sif: IF bool_expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 149


State 146

   30 sdo: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .

    $default  reduce using rule 30 (sdo)


State 147

   71 expressions: expression COMMA . expressions

    SUB  shift, and go to state 66

    R_PAREN   reduce using rule 73 (expressions)
    $default  reduce using rule 70 (subs)

    expression           go to state 143
    multiplicative_expr  go to state 68
    term                 go to state 69
    term_spec            go to state 70
    subs                 go to state 71
    expressions          go to state 150


State 148

   76 var_or_bottom: L_PAREN expressions R_PAREN .

    $default  reduce using rule 76 (var_or_bottom)


State 149

   28 sif: IF bool_expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 28 (sif)


State 150

   71 expressions: expression COMMA expressions .

    $default  reduce using rule 71 (expressions)
