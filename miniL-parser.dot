// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "miniL.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=dotted]
  0 -> 2 [style=solid label="FUNCTION"]
  0 -> 3 [style=dashed label="program"]
  0 -> 4 [style=dashed label="functions"]
  0 -> 5 [style=dashed label="function"]
  0 -> "0R4" [label="[$end]", style=solid]
 "0R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  2 program: error .\l"]
  1 -> "1R2" [style=solid]
 "1R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l  6 function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  2 -> 6 [style=solid label="IDENT"]
  3 [label="State 3\n\l  0 $accept: program . $end\l"]
  3 -> 7 [style=solid label="$end"]
  4 [label="State 4\n\l  1 program: functions .\l"]
  4 -> "4R1" [style=solid]
 "4R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  3 functions: function . functions_spec\l"]
  5 -> 2 [style=solid label="FUNCTION"]
  5 -> 8 [style=dashed label="functions"]
  5 -> 9 [style=dashed label="functions_spec"]
  5 -> 5 [style=dashed label="function"]
  5 -> "5R4" [style=solid]
 "5R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  6 function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  6 -> 10 [style=solid label="SEMICOLON"]
  7 [label="State 7\n\l  0 $accept: program $end .\l"]
  7 -> "7R0" [style=solid]
 "7R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  8 [label="State 8\n\l  5 functions_spec: functions .\l"]
  8 -> "8R5" [style=solid]
 "8R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l  3 functions: function functions_spec .\l"]
  9 -> "9R3" [style=solid]
 "9R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l  6 function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  10 -> 11 [style=solid label="BEGIN_PARAMS"]
  11 [label="State 11\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  11 -> 12 [style=solid label="IDENT"]
  11 -> 13 [style=dashed label="declarations"]
  11 -> 14 [style=dashed label="declaration"]
  11 -> 15 [style=dashed label="identifiers"]
  11 -> "11R8" [style=solid]
 "11R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 16 identifiers: IDENT . COMMA identifiers\l 17            | IDENT .\l"]
  12 -> 16 [style=solid label="COMMA"]
  12 -> "12R17" [style=solid]
 "12R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  13 -> 17 [style=solid label="END_PARAMS"]
  14 [label="State 14\n\l  7 declarations: declaration . SEMICOLON declarations_spec\l"]
  14 -> 18 [style=solid label="SEMICOLON"]
  15 [label="State 15\n\l 13 declaration: identifiers . COLON INTEGER\l 14            | identifiers . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER\l 15            | identifiers . COLON ENUM L_PAREN identifiers R_PAREN\l"]
  15 -> 19 [style=solid label="COLON"]
  16 [label="State 16\n\l 16 identifiers: IDENT COMMA . identifiers\l"]
  16 -> 12 [style=solid label="IDENT"]
  16 -> 20 [style=dashed label="identifiers"]
  17 [label="State 17\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  17 -> 21 [style=solid label="BEGIN_LOCALS"]
  18 [label="State 18\n\l  7 declarations: declaration SEMICOLON . declarations_spec\l"]
  18 -> 12 [style=solid label="IDENT"]
  18 -> 22 [style=dashed label="declarations"]
  18 -> 23 [style=dashed label="declarations_spec"]
  18 -> 14 [style=dashed label="declaration"]
  18 -> 15 [style=dashed label="identifiers"]
  18 -> "18R8" [style=solid]
 "18R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 13 declaration: identifiers COLON . INTEGER\l 14            | identifiers COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER\l 15            | identifiers COLON . ENUM L_PAREN identifiers R_PAREN\l"]
  19 -> 24 [style=solid label="INTEGER"]
  19 -> 25 [style=solid label="ARRAY"]
  19 -> 26 [style=solid label="ENUM"]
  20 [label="State 20\n\l 16 identifiers: IDENT COMMA identifiers .\l"]
  20 -> "20R16" [style=solid]
 "20R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  21 [label="State 21\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY\l"]
  21 -> 12 [style=solid label="IDENT"]
  21 -> 27 [style=dashed label="declarations"]
  21 -> 14 [style=dashed label="declaration"]
  21 -> 15 [style=dashed label="identifiers"]
  21 -> "21R8" [style=solid]
 "21R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  22 [label="State 22\n\l  9 declarations_spec: declarations .\l"]
  22 -> "22R9" [style=solid]
 "22R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l  7 declarations: declaration SEMICOLON declarations_spec .\l"]
  23 -> "23R7" [style=solid]
 "23R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 13 declaration: identifiers COLON INTEGER .\l"]
  24 -> "24R13" [style=solid]
 "24R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 14 declaration: identifiers COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER\l"]
  25 -> 28 [style=solid label="L_SQUARE_BRACKET"]
  26 [label="State 26\n\l 15 declaration: identifiers COLON ENUM . L_PAREN identifiers R_PAREN\l"]
  26 -> 29 [style=solid label="L_PAREN"]
  27 [label="State 27\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY\l"]
  27 -> 30 [style=solid label="END_LOCALS"]
  28 [label="State 28\n\l 14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER\l"]
  28 -> 31 [style=solid label="NUMBER"]
  29 [label="State 29\n\l 15 declaration: identifiers COLON ENUM L_PAREN . identifiers R_PAREN\l"]
  29 -> 12 [style=solid label="IDENT"]
  29 -> 32 [style=dashed label="identifiers"]
  30 [label="State 30\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY\l"]
  30 -> 33 [style=solid label="BEGIN_BODY"]
  31 [label="State 31\n\l 14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER\l"]
  31 -> 34 [style=solid label="R_SQUARE_BRACKET"]
  32 [label="State 32\n\l 15 declaration: identifiers COLON ENUM L_PAREN identifiers . R_PAREN\l"]
  32 -> 35 [style=solid label="R_PAREN"]
  33 [label="State 33\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY\l"]
  33 -> 36 [style=solid label="IF"]
  33 -> 37 [style=solid label="WHILE"]
  33 -> 38 [style=solid label="DO"]
  33 -> 39 [style=solid label="CONTINUE"]
  33 -> 40 [style=solid label="READ"]
  33 -> 41 [style=solid label="WRITE"]
  33 -> 42 [style=solid label="RETURN"]
  33 -> 43 [style=solid label="IDENT"]
  33 -> 44 [style=dashed label="statements"]
  33 -> 45 [style=dashed label="statement"]
  33 -> 46 [style=dashed label="svar"]
  33 -> 47 [style=dashed label="sif"]
  33 -> 48 [style=dashed label="swhile"]
  33 -> 49 [style=dashed label="sdo"]
  33 -> 50 [style=dashed label="sread"]
  33 -> 51 [style=dashed label="swrite"]
  33 -> 52 [style=dashed label="scontinue"]
  33 -> 53 [style=dashed label="sreturn"]
  33 -> 54 [style=dashed label="var"]
  34 [label="State 34\n\l 14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER\l"]
  34 -> 55 [style=solid label="OF"]
  35 [label="State 35\n\l 15 declaration: identifiers COLON ENUM L_PAREN identifiers R_PAREN .\l"]
  35 -> "35R15" [style=solid]
 "35R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  36 [label="State 36\n\l 27 sif: IF . bool_expr THEN statements ENDIF\l 28    | IF . bool_expr THEN statements ELSE statements ENDIF\l"]
  36 -> 56 [style=solid label="NOT"]
  36 -> 57 [style=dashed label="bool_expr"]
  36 -> 58 [style=dashed label="relation_and_expr"]
  36 -> 59 [style=dashed label="relation_expr"]
  36 -> 60 [style=dashed label="nots"]
  36 -> "36R49" [style=solid]
 "36R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 29 swhile: WHILE . bool_expr BEGINLOOP statements ENDLOOP\l"]
  37 -> 56 [style=solid label="NOT"]
  37 -> 61 [style=dashed label="bool_expr"]
  37 -> 58 [style=dashed label="relation_and_expr"]
  37 -> 59 [style=dashed label="relation_expr"]
  37 -> 60 [style=dashed label="nots"]
  37 -> "37R49" [style=solid]
 "37R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 30 sdo: DO . BEGINLOOP statements ENDLOOP WHILE bool_expr\l"]
  38 -> 62 [style=solid label="BEGINLOOP"]
  39 [label="State 39\n\l 35 scontinue: CONTINUE .\l"]
  39 -> "39R35" [style=solid]
 "39R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 31 sread: READ . vars\l"]
  40 -> 43 [style=solid label="IDENT"]
  40 -> 63 [style=dashed label="vars"]
  40 -> 64 [style=dashed label="var"]
  41 [label="State 41\n\l 34 swrite: WRITE . vars\l"]
  41 -> 43 [style=solid label="IDENT"]
  41 -> 65 [style=dashed label="vars"]
  41 -> 64 [style=dashed label="var"]
  42 [label="State 42\n\l 36 sreturn: RETURN . expression\l"]
  42 -> 66 [style=solid label="SUB"]
  42 -> 67 [style=dashed label="expression"]
  42 -> 68 [style=dashed label="multiplicative_expr"]
  42 -> 69 [style=dashed label="term"]
  42 -> 70 [style=dashed label="term_spec"]
  42 -> 71 [style=dashed label="subs"]
  42 -> "42R70" [style=solid]
 "42R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 74 var: IDENT . var_spec\l"]
  43 -> 72 [style=solid label="L_SQUARE_BRACKET"]
  43 -> 73 [style=dashed label="var_spec"]
  43 -> "43R78" [style=solid]
 "43R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY\l"]
  44 -> 74 [style=solid label="END_BODY"]
  45 [label="State 45\n\l 10 statements: statement . SEMICOLON statementsEnding\l"]
  45 -> 75 [style=solid label="SEMICOLON"]
  46 [label="State 46\n\l 18 statement: svar .\l"]
  46 -> "46R18" [style=solid]
 "46R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 19 statement: sif .\l"]
  47 -> "47R19" [style=solid]
 "47R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 20 statement: swhile .\l"]
  48 -> "48R20" [style=solid]
 "48R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 21 statement: sdo .\l"]
  49 -> "49R21" [style=solid]
 "49R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 22 statement: sread .\l"]
  50 -> "50R22" [style=solid]
 "50R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 23 statement: swrite .\l"]
  51 -> "51R23" [style=solid]
 "51R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 24 statement: scontinue .\l"]
  52 -> "52R24" [style=solid]
 "52R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 25 statement: sreturn .\l"]
  53 -> "53R25" [style=solid]
 "53R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l 26 svar: var . ASSIGN expression\l"]
  54 -> 76 [style=solid label="ASSIGN"]
  55 [label="State 55\n\l 14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER\l"]
  55 -> 77 [style=solid label="INTEGER"]
  56 [label="State 56\n\l 48 nots: NOT .\l"]
  56 -> "56R48" [style=solid]
 "56R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 27 sif: IF bool_expr . THEN statements ENDIF\l 28    | IF bool_expr . THEN statements ELSE statements ENDIF\l"]
  57 -> 78 [style=solid label="THEN"]
  58 [label="State 58\n\l 37 bool_expr: relation_and_expr . bool_exprs\l"]
  58 -> 79 [style=solid label="OR"]
  58 -> 80 [style=dashed label="bool_exprs"]
  58 -> "58R39" [style=solid]
 "58R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  59 [label="State 59\n\l 40 relation_and_expr: relation_expr . relation_and_exprs\l"]
  59 -> 81 [style=solid label="AND"]
  59 -> 82 [style=dashed label="relation_and_exprs"]
  59 -> "59R42" [style=solid]
 "59R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 43 relation_expr: nots . relation_expr_ending\l"]
  60 -> 83 [style=solid label="TRUE"]
  60 -> 84 [style=solid label="FALSE"]
  60 -> 85 [style=solid label="L_PAREN"]
  60 -> 66 [style=solid label="SUB"]
  60 -> 86 [style=dashed label="relation_expr_ending"]
  60 -> 87 [style=dashed label="expression"]
  60 -> 68 [style=dashed label="multiplicative_expr"]
  60 -> 69 [style=dashed label="term"]
  60 -> 70 [style=dashed label="term_spec"]
  60 -> 71 [style=dashed label="subs"]
  60 -> "60R70d" [label="[L_PAREN]", style=solid]
 "60R70d" [label="R70", fillcolor=5, shape=diamond, style=filled]
  60 -> "60R70" [style=solid]
 "60R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 29 swhile: WHILE bool_expr . BEGINLOOP statements ENDLOOP\l"]
  61 -> 88 [style=solid label="BEGINLOOP"]
  62 [label="State 62\n\l 30 sdo: DO BEGINLOOP . statements ENDLOOP WHILE bool_expr\l"]
  62 -> 36 [style=solid label="IF"]
  62 -> 37 [style=solid label="WHILE"]
  62 -> 38 [style=solid label="DO"]
  62 -> 39 [style=solid label="CONTINUE"]
  62 -> 40 [style=solid label="READ"]
  62 -> 41 [style=solid label="WRITE"]
  62 -> 42 [style=solid label="RETURN"]
  62 -> 43 [style=solid label="IDENT"]
  62 -> 89 [style=dashed label="statements"]
  62 -> 45 [style=dashed label="statement"]
  62 -> 46 [style=dashed label="svar"]
  62 -> 47 [style=dashed label="sif"]
  62 -> 48 [style=dashed label="swhile"]
  62 -> 49 [style=dashed label="sdo"]
  62 -> 50 [style=dashed label="sread"]
  62 -> 51 [style=dashed label="swrite"]
  62 -> 52 [style=dashed label="scontinue"]
  62 -> 53 [style=dashed label="sreturn"]
  62 -> 54 [style=dashed label="var"]
  63 [label="State 63\n\l 31 sread: READ vars .\l"]
  63 -> "63R31" [style=solid]
 "63R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 32 vars: var .\l 33     | var . COMMA vars\l"]
  64 -> 90 [style=solid label="COMMA"]
  64 -> "64R32" [style=solid]
 "64R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l 34 swrite: WRITE vars .\l"]
  65 -> "65R34" [style=solid]
 "65R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l 69 subs: SUB .\l"]
  66 -> "66R69" [style=solid]
 "66R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 36 sreturn: RETURN expression .\l"]
  67 -> "67R36" [style=solid]
 "67R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 56 expression: multiplicative_expr . expression_operators\l"]
  68 -> 91 [style=solid label="ADD"]
  68 -> 92 [style=solid label="SUB"]
  68 -> 93 [style=dashed label="expression_operators"]
  68 -> "68R59" [style=solid]
 "68R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  69 [label="State 69\n\l 60 multiplicative_expr: term . multiplicative_operators\l"]
  69 -> 94 [style=solid label="MULT"]
  69 -> 95 [style=solid label="DIV"]
  69 -> 96 [style=solid label="MOD"]
  69 -> 97 [style=dashed label="multiplicative_operators"]
  69 -> "69R64" [style=solid]
 "69R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 65 term: term_spec .\l"]
  70 -> "70R65" [style=solid]
 "70R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 66 term: subs . NUMBER\l 67     | subs . L_PAREN expression R_PAREN\l 68 term_spec: subs . IDENT var_or_bottom\l"]
  71 -> 98 [style=solid label="L_PAREN"]
  71 -> 99 [style=solid label="IDENT"]
  71 -> 100 [style=solid label="NUMBER"]
  72 [label="State 72\n\l 77 var_spec: L_SQUARE_BRACKET . expression R_SQUARE_BRACKET\l"]
  72 -> 66 [style=solid label="SUB"]
  72 -> 101 [style=dashed label="expression"]
  72 -> 68 [style=dashed label="multiplicative_expr"]
  72 -> 69 [style=dashed label="term"]
  72 -> 70 [style=dashed label="term_spec"]
  72 -> 71 [style=dashed label="subs"]
  72 -> "72R70" [style=solid]
 "72R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  73 [label="State 73\n\l 74 var: IDENT var_spec .\l"]
  73 -> "73R74" [style=solid]
 "73R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l  6 function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .\l"]
  74 -> "74R6" [style=solid]
 "74R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 10 statements: statement SEMICOLON . statementsEnding\l"]
  75 -> 36 [style=solid label="IF"]
  75 -> 37 [style=solid label="WHILE"]
  75 -> 38 [style=solid label="DO"]
  75 -> 39 [style=solid label="CONTINUE"]
  75 -> 40 [style=solid label="READ"]
  75 -> 41 [style=solid label="WRITE"]
  75 -> 42 [style=solid label="RETURN"]
  75 -> 43 [style=solid label="IDENT"]
  75 -> 102 [style=dashed label="statements"]
  75 -> 103 [style=dashed label="statementsEnding"]
  75 -> 45 [style=dashed label="statement"]
  75 -> 46 [style=dashed label="svar"]
  75 -> 47 [style=dashed label="sif"]
  75 -> 48 [style=dashed label="swhile"]
  75 -> 49 [style=dashed label="sdo"]
  75 -> 50 [style=dashed label="sread"]
  75 -> 51 [style=dashed label="swrite"]
  75 -> 52 [style=dashed label="scontinue"]
  75 -> 53 [style=dashed label="sreturn"]
  75 -> 54 [style=dashed label="var"]
  75 -> "75R12" [style=solid]
 "75R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  76 [label="State 76\n\l 26 svar: var ASSIGN . expression\l"]
  76 -> 66 [style=solid label="SUB"]
  76 -> 104 [style=dashed label="expression"]
  76 -> 68 [style=dashed label="multiplicative_expr"]
  76 -> 69 [style=dashed label="term"]
  76 -> 70 [style=dashed label="term_spec"]
  76 -> 71 [style=dashed label="subs"]
  76 -> "76R70" [style=solid]
 "76R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 14 declaration: identifiers COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .\l"]
  77 -> "77R14" [style=solid]
 "77R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 27 sif: IF bool_expr THEN . statements ENDIF\l 28    | IF bool_expr THEN . statements ELSE statements ENDIF\l"]
  78 -> 36 [style=solid label="IF"]
  78 -> 37 [style=solid label="WHILE"]
  78 -> 38 [style=solid label="DO"]
  78 -> 39 [style=solid label="CONTINUE"]
  78 -> 40 [style=solid label="READ"]
  78 -> 41 [style=solid label="WRITE"]
  78 -> 42 [style=solid label="RETURN"]
  78 -> 43 [style=solid label="IDENT"]
  78 -> 105 [style=dashed label="statements"]
  78 -> 45 [style=dashed label="statement"]
  78 -> 46 [style=dashed label="svar"]
  78 -> 47 [style=dashed label="sif"]
  78 -> 48 [style=dashed label="swhile"]
  78 -> 49 [style=dashed label="sdo"]
  78 -> 50 [style=dashed label="sread"]
  78 -> 51 [style=dashed label="swrite"]
  78 -> 52 [style=dashed label="scontinue"]
  78 -> 53 [style=dashed label="sreturn"]
  78 -> 54 [style=dashed label="var"]
  79 [label="State 79\n\l 38 bool_exprs: OR . relation_and_expr bool_exprs\l"]
  79 -> 56 [style=solid label="NOT"]
  79 -> 106 [style=dashed label="relation_and_expr"]
  79 -> 59 [style=dashed label="relation_expr"]
  79 -> 60 [style=dashed label="nots"]
  79 -> "79R49" [style=solid]
 "79R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 37 bool_expr: relation_and_expr bool_exprs .\l"]
  80 -> "80R37" [style=solid]
 "80R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 41 relation_and_exprs: AND . relation_expr relation_and_exprs\l"]
  81 -> 56 [style=solid label="NOT"]
  81 -> 107 [style=dashed label="relation_expr"]
  81 -> 60 [style=dashed label="nots"]
  81 -> "81R49" [style=solid]
 "81R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 40 relation_and_expr: relation_expr relation_and_exprs .\l"]
  82 -> "82R40" [style=solid]
 "82R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 45 relation_expr_ending: TRUE .\l"]
  83 -> "83R45" [style=solid]
 "83R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 46 relation_expr_ending: FALSE .\l"]
  84 -> "84R46" [style=solid]
 "84R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  85 [label="State 85\n\l 47 relation_expr_ending: L_PAREN . bool_expr R_PAREN\l"]
  85 -> 56 [style=solid label="NOT"]
  85 -> 108 [style=dashed label="bool_expr"]
  85 -> 58 [style=dashed label="relation_and_expr"]
  85 -> 59 [style=dashed label="relation_expr"]
  85 -> 60 [style=dashed label="nots"]
  85 -> "85R49" [style=solid]
 "85R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 43 relation_expr: nots relation_expr_ending .\l"]
  86 -> "86R43" [style=solid]
 "86R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 44 relation_expr_ending: expression . comp expression\l"]
  87 -> 109 [style=solid label="NEQ"]
  87 -> 110 [style=solid label="EQ"]
  87 -> 111 [style=solid label="GTE"]
  87 -> 112 [style=solid label="GT"]
  87 -> 113 [style=solid label="LTE"]
  87 -> 114 [style=solid label="LT"]
  87 -> 115 [style=dashed label="comp"]
  88 [label="State 88\n\l 29 swhile: WHILE bool_expr BEGINLOOP . statements ENDLOOP\l"]
  88 -> 36 [style=solid label="IF"]
  88 -> 37 [style=solid label="WHILE"]
  88 -> 38 [style=solid label="DO"]
  88 -> 39 [style=solid label="CONTINUE"]
  88 -> 40 [style=solid label="READ"]
  88 -> 41 [style=solid label="WRITE"]
  88 -> 42 [style=solid label="RETURN"]
  88 -> 43 [style=solid label="IDENT"]
  88 -> 116 [style=dashed label="statements"]
  88 -> 45 [style=dashed label="statement"]
  88 -> 46 [style=dashed label="svar"]
  88 -> 47 [style=dashed label="sif"]
  88 -> 48 [style=dashed label="swhile"]
  88 -> 49 [style=dashed label="sdo"]
  88 -> 50 [style=dashed label="sread"]
  88 -> 51 [style=dashed label="swrite"]
  88 -> 52 [style=dashed label="scontinue"]
  88 -> 53 [style=dashed label="sreturn"]
  88 -> 54 [style=dashed label="var"]
  89 [label="State 89\n\l 30 sdo: DO BEGINLOOP statements . ENDLOOP WHILE bool_expr\l"]
  89 -> 117 [style=solid label="ENDLOOP"]
  90 [label="State 90\n\l 33 vars: var COMMA . vars\l"]
  90 -> 43 [style=solid label="IDENT"]
  90 -> 118 [style=dashed label="vars"]
  90 -> 64 [style=dashed label="var"]
  91 [label="State 91\n\l 57 expression_operators: ADD . multiplicative_expr expression_operators\l"]
  91 -> 66 [style=solid label="SUB"]
  91 -> 119 [style=dashed label="multiplicative_expr"]
  91 -> 69 [style=dashed label="term"]
  91 -> 70 [style=dashed label="term_spec"]
  91 -> 71 [style=dashed label="subs"]
  91 -> "91R70" [style=solid]
 "91R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 58 expression_operators: SUB . multiplicative_expr expression_operators\l"]
  92 -> 66 [style=solid label="SUB"]
  92 -> 120 [style=dashed label="multiplicative_expr"]
  92 -> 69 [style=dashed label="term"]
  92 -> 70 [style=dashed label="term_spec"]
  92 -> 71 [style=dashed label="subs"]
  92 -> "92R70" [style=solid]
 "92R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 56 expression: multiplicative_expr expression_operators .\l"]
  93 -> "93R56" [style=solid]
 "93R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 63 multiplicative_operators: MULT . term multiplicative_operators\l"]
  94 -> 66 [style=solid label="SUB"]
  94 -> 121 [style=dashed label="term"]
  94 -> 70 [style=dashed label="term_spec"]
  94 -> 71 [style=dashed label="subs"]
  94 -> "94R70" [style=solid]
 "94R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  95 [label="State 95\n\l 62 multiplicative_operators: DIV . term multiplicative_operators\l"]
  95 -> 66 [style=solid label="SUB"]
  95 -> 122 [style=dashed label="term"]
  95 -> 70 [style=dashed label="term_spec"]
  95 -> 71 [style=dashed label="subs"]
  95 -> "95R70" [style=solid]
 "95R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  96 [label="State 96\n\l 61 multiplicative_operators: MOD . term multiplicative_operators\l"]
  96 -> 66 [style=solid label="SUB"]
  96 -> 123 [style=dashed label="term"]
  96 -> 70 [style=dashed label="term_spec"]
  96 -> 71 [style=dashed label="subs"]
  96 -> "96R70" [style=solid]
 "96R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 60 multiplicative_expr: term multiplicative_operators .\l"]
  97 -> "97R60" [style=solid]
 "97R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 67 term: subs L_PAREN . expression R_PAREN\l"]
  98 -> 66 [style=solid label="SUB"]
  98 -> 124 [style=dashed label="expression"]
  98 -> 68 [style=dashed label="multiplicative_expr"]
  98 -> 69 [style=dashed label="term"]
  98 -> 70 [style=dashed label="term_spec"]
  98 -> 71 [style=dashed label="subs"]
  98 -> "98R70" [style=solid]
 "98R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  99 [label="State 99\n\l 68 term_spec: subs IDENT . var_or_bottom\l"]
  99 -> 125 [style=solid label="L_PAREN"]
  99 -> 72 [style=solid label="L_SQUARE_BRACKET"]
  99 -> 126 [style=dashed label="var_or_bottom"]
  99 -> 127 [style=dashed label="var_spec"]
  99 -> "99R78" [style=solid]
 "99R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  100 [label="State 100\n\l 66 term: subs NUMBER .\l"]
  100 -> "100R66" [style=solid]
 "100R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 77 var_spec: L_SQUARE_BRACKET expression . R_SQUARE_BRACKET\l"]
  101 -> 128 [style=solid label="R_SQUARE_BRACKET"]
  102 [label="State 102\n\l 11 statementsEnding: statements .\l"]
  102 -> "102R11" [style=solid]
 "102R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  103 [label="State 103\n\l 10 statements: statement SEMICOLON statementsEnding .\l"]
  103 -> "103R10" [style=solid]
 "103R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  104 [label="State 104\n\l 26 svar: var ASSIGN expression .\l"]
  104 -> "104R26" [style=solid]
 "104R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  105 [label="State 105\n\l 27 sif: IF bool_expr THEN statements . ENDIF\l 28    | IF bool_expr THEN statements . ELSE statements ENDIF\l"]
  105 -> 129 [style=solid label="ENDIF"]
  105 -> 130 [style=solid label="ELSE"]
  106 [label="State 106\n\l 38 bool_exprs: OR relation_and_expr . bool_exprs\l"]
  106 -> 79 [style=solid label="OR"]
  106 -> 131 [style=dashed label="bool_exprs"]
  106 -> "106R39" [style=solid]
 "106R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  107 [label="State 107\n\l 41 relation_and_exprs: AND relation_expr . relation_and_exprs\l"]
  107 -> 81 [style=solid label="AND"]
  107 -> 132 [style=dashed label="relation_and_exprs"]
  107 -> "107R42" [style=solid]
 "107R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  108 [label="State 108\n\l 47 relation_expr_ending: L_PAREN bool_expr . R_PAREN\l"]
  108 -> 133 [style=solid label="R_PAREN"]
  109 [label="State 109\n\l 51 comp: NEQ .\l"]
  109 -> "109R51" [style=solid]
 "109R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  110 [label="State 110\n\l 50 comp: EQ .\l"]
  110 -> "110R50" [style=solid]
 "110R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 55 comp: GTE .\l"]
  111 -> "111R55" [style=solid]
 "111R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  112 [label="State 112\n\l 53 comp: GT .\l"]
  112 -> "112R53" [style=solid]
 "112R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  113 [label="State 113\n\l 54 comp: LTE .\l"]
  113 -> "113R54" [style=solid]
 "113R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 52 comp: LT .\l"]
  114 -> "114R52" [style=solid]
 "114R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  115 [label="State 115\n\l 44 relation_expr_ending: expression comp . expression\l"]
  115 -> 66 [style=solid label="SUB"]
  115 -> 134 [style=dashed label="expression"]
  115 -> 68 [style=dashed label="multiplicative_expr"]
  115 -> 69 [style=dashed label="term"]
  115 -> 70 [style=dashed label="term_spec"]
  115 -> 71 [style=dashed label="subs"]
  115 -> "115R70" [style=solid]
 "115R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l 29 swhile: WHILE bool_expr BEGINLOOP statements . ENDLOOP\l"]
  116 -> 135 [style=solid label="ENDLOOP"]
  117 [label="State 117\n\l 30 sdo: DO BEGINLOOP statements ENDLOOP . WHILE bool_expr\l"]
  117 -> 136 [style=solid label="WHILE"]
  118 [label="State 118\n\l 33 vars: var COMMA vars .\l"]
  118 -> "118R33" [style=solid]
 "118R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  119 [label="State 119\n\l 57 expression_operators: ADD multiplicative_expr . expression_operators\l"]
  119 -> 91 [style=solid label="ADD"]
  119 -> 92 [style=solid label="SUB"]
  119 -> 137 [style=dashed label="expression_operators"]
  119 -> "119R59" [style=solid]
 "119R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  120 [label="State 120\n\l 58 expression_operators: SUB multiplicative_expr . expression_operators\l"]
  120 -> 91 [style=solid label="ADD"]
  120 -> 92 [style=solid label="SUB"]
  120 -> 138 [style=dashed label="expression_operators"]
  120 -> "120R59" [style=solid]
 "120R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  121 [label="State 121\n\l 63 multiplicative_operators: MULT term . multiplicative_operators\l"]
  121 -> 94 [style=solid label="MULT"]
  121 -> 95 [style=solid label="DIV"]
  121 -> 96 [style=solid label="MOD"]
  121 -> 139 [style=dashed label="multiplicative_operators"]
  121 -> "121R64" [style=solid]
 "121R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  122 [label="State 122\n\l 62 multiplicative_operators: DIV term . multiplicative_operators\l"]
  122 -> 94 [style=solid label="MULT"]
  122 -> 95 [style=solid label="DIV"]
  122 -> 96 [style=solid label="MOD"]
  122 -> 140 [style=dashed label="multiplicative_operators"]
  122 -> "122R64" [style=solid]
 "122R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l 61 multiplicative_operators: MOD term . multiplicative_operators\l"]
  123 -> 94 [style=solid label="MULT"]
  123 -> 95 [style=solid label="DIV"]
  123 -> 96 [style=solid label="MOD"]
  123 -> 141 [style=dashed label="multiplicative_operators"]
  123 -> "123R64" [style=solid]
 "123R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 67 term: subs L_PAREN expression . R_PAREN\l"]
  124 -> 142 [style=solid label="R_PAREN"]
  125 [label="State 125\n\l 76 var_or_bottom: L_PAREN . expressions R_PAREN\l"]
  125 -> 66 [style=solid label="SUB"]
  125 -> 143 [style=dashed label="expression"]
  125 -> 68 [style=dashed label="multiplicative_expr"]
  125 -> 69 [style=dashed label="term"]
  125 -> 70 [style=dashed label="term_spec"]
  125 -> 71 [style=dashed label="subs"]
  125 -> 144 [style=dashed label="expressions"]
  125 -> "125R70" [style=solid]
 "125R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  125 -> "125R73" [label="[R_PAREN]", style=solid]
 "125R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 68 term_spec: subs IDENT var_or_bottom .\l"]
  126 -> "126R68" [style=solid]
 "126R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 75 var_or_bottom: var_spec .\l"]
  127 -> "127R75" [style=solid]
 "127R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 77 var_spec: L_SQUARE_BRACKET expression R_SQUARE_BRACKET .\l"]
  128 -> "128R77" [style=solid]
 "128R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  129 [label="State 129\n\l 27 sif: IF bool_expr THEN statements ENDIF .\l"]
  129 -> "129R27" [style=solid]
 "129R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 28 sif: IF bool_expr THEN statements ELSE . statements ENDIF\l"]
  130 -> 36 [style=solid label="IF"]
  130 -> 37 [style=solid label="WHILE"]
  130 -> 38 [style=solid label="DO"]
  130 -> 39 [style=solid label="CONTINUE"]
  130 -> 40 [style=solid label="READ"]
  130 -> 41 [style=solid label="WRITE"]
  130 -> 42 [style=solid label="RETURN"]
  130 -> 43 [style=solid label="IDENT"]
  130 -> 145 [style=dashed label="statements"]
  130 -> 45 [style=dashed label="statement"]
  130 -> 46 [style=dashed label="svar"]
  130 -> 47 [style=dashed label="sif"]
  130 -> 48 [style=dashed label="swhile"]
  130 -> 49 [style=dashed label="sdo"]
  130 -> 50 [style=dashed label="sread"]
  130 -> 51 [style=dashed label="swrite"]
  130 -> 52 [style=dashed label="scontinue"]
  130 -> 53 [style=dashed label="sreturn"]
  130 -> 54 [style=dashed label="var"]
  131 [label="State 131\n\l 38 bool_exprs: OR relation_and_expr bool_exprs .\l"]
  131 -> "131R38" [style=solid]
 "131R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  132 [label="State 132\n\l 41 relation_and_exprs: AND relation_expr relation_and_exprs .\l"]
  132 -> "132R41" [style=solid]
 "132R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 47 relation_expr_ending: L_PAREN bool_expr R_PAREN .\l"]
  133 -> "133R47" [style=solid]
 "133R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  134 [label="State 134\n\l 44 relation_expr_ending: expression comp expression .\l"]
  134 -> "134R44" [style=solid]
 "134R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  135 [label="State 135\n\l 29 swhile: WHILE bool_expr BEGINLOOP statements ENDLOOP .\l"]
  135 -> "135R29" [style=solid]
 "135R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  136 [label="State 136\n\l 30 sdo: DO BEGINLOOP statements ENDLOOP WHILE . bool_expr\l"]
  136 -> 56 [style=solid label="NOT"]
  136 -> 146 [style=dashed label="bool_expr"]
  136 -> 58 [style=dashed label="relation_and_expr"]
  136 -> 59 [style=dashed label="relation_expr"]
  136 -> 60 [style=dashed label="nots"]
  136 -> "136R49" [style=solid]
 "136R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  137 [label="State 137\n\l 57 expression_operators: ADD multiplicative_expr expression_operators .\l"]
  137 -> "137R57" [style=solid]
 "137R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 58 expression_operators: SUB multiplicative_expr expression_operators .\l"]
  138 -> "138R58" [style=solid]
 "138R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  139 [label="State 139\n\l 63 multiplicative_operators: MULT term multiplicative_operators .\l"]
  139 -> "139R63" [style=solid]
 "139R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 62 multiplicative_operators: DIV term multiplicative_operators .\l"]
  140 -> "140R62" [style=solid]
 "140R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 61 multiplicative_operators: MOD term multiplicative_operators .\l"]
  141 -> "141R61" [style=solid]
 "141R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 67 term: subs L_PAREN expression R_PAREN .\l"]
  142 -> "142R67" [style=solid]
 "142R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 71 expressions: expression . COMMA expressions\l 72            | expression .\l"]
  143 -> 147 [style=solid label="COMMA"]
  143 -> "143R72" [style=solid]
 "143R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  144 [label="State 144\n\l 76 var_or_bottom: L_PAREN expressions . R_PAREN\l"]
  144 -> 148 [style=solid label="R_PAREN"]
  145 [label="State 145\n\l 28 sif: IF bool_expr THEN statements ELSE statements . ENDIF\l"]
  145 -> 149 [style=solid label="ENDIF"]
  146 [label="State 146\n\l 30 sdo: DO BEGINLOOP statements ENDLOOP WHILE bool_expr .\l"]
  146 -> "146R30" [style=solid]
 "146R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  147 [label="State 147\n\l 71 expressions: expression COMMA . expressions\l"]
  147 -> 66 [style=solid label="SUB"]
  147 -> 143 [style=dashed label="expression"]
  147 -> 68 [style=dashed label="multiplicative_expr"]
  147 -> 69 [style=dashed label="term"]
  147 -> 70 [style=dashed label="term_spec"]
  147 -> 71 [style=dashed label="subs"]
  147 -> 150 [style=dashed label="expressions"]
  147 -> "147R70" [style=solid]
 "147R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  147 -> "147R73" [label="[R_PAREN]", style=solid]
 "147R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 76 var_or_bottom: L_PAREN expressions R_PAREN .\l"]
  148 -> "148R76" [style=solid]
 "148R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  149 [label="State 149\n\l 28 sif: IF bool_expr THEN statements ELSE statements ENDIF .\l"]
  149 -> "149R28" [style=solid]
 "149R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  150 [label="State 150\n\l 71 expressions: expression COMMA expressions .\l"]
  150 -> "150R71" [style=solid]
 "150R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
}
